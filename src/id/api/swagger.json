{
  "openapi": "3.0.0",
  "paths": {
    "/users": {
      "post": {
        "operationId": "create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublicResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/invite": {
      "post": {
        "operationId": "invite",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InviteUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublicResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/find-user-by-email": {
      "get": {
        "operationId": "getUserByEmail",
        "parameters": [
          {
            "name": "email",
            "required": true,
            "in": "query",
            "example": "email@example.com",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "required": true,
            "in": "query",
            "example": "00000000-0000-0000-0000-000000000001",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublicResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/profile": {
      "get": {
        "operationId": "getProfileByUserLogged",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublicResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, admin,user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/{tenantId}/report/{email}": {
      "get": {
        "operationId": "getUsersReport",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, superAdmin,admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/{tenantId}/{id}": {
      "get": {
        "operationId": "getProfileUserById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublicResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/{tenantId}": {
      "get": {
        "operationId": "getUsersByTenantId",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          },
          {
            "name": "role",
            "required": false,
            "in": "query",
            "example": "user",
            "schema": {
              "$ref": "#/components/schemas/UserRoleEnum"
            }
          },
          {
            "name": "userId",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPaginateResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/{tenantId}/profile": {
      "patch": {
        "operationId": "updateProfileByUserLogged",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfileUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublicResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, admin,user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/change-password": {
      "patch": {
        "operationId": "changePassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          },
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, admin,user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/main-wallet": {
      "patch": {
        "operationId": "setWalletDefault",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MainWalletDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/{tenantId}/{id}/token": {
      "patch": {
        "operationId": "updateToken",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTokenDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserTokenResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/{tenantId}/{id}/edit": {
      "patch": {
        "operationId": "update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublicResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/account-complete/retry": {
      "post": {
        "operationId": "accountCompleteRetry",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountCompleteRetryDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/{tenantId}/{userId}/toggle-operator-role": {
      "post": {
        "operationId": "toggleOperatorRole",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/{tenantId}/wallets/vault/claim": {
      "post": {
        "operationId": "createVault",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WalletResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Users Wallet"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/{tenantId}/wallets/by-address/{address}": {
      "get": {
        "operationId": "findByAddress",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WalletResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, administrator,integration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Users Wallet"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/{tenantId}/wallets/own-wallet-by-address/{address}": {
      "get": {
        "operationId": "findOwnWalletByAddress",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WalletResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, admin,user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Users Wallet"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/{tenantId}/wallets/{userId}": {
      "get": {
        "operationId": "findAllWalletByUserId",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WalletResponseDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Users Wallet"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/{tenantId}/wallets/{userId}/{walletId}": {
      "get": {
        "operationId": "findWallet",
        "parameters": [
          {
            "name": "walletId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WalletResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Users Wallet"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/{tenantId}/wallets/metamask/request": {
      "post": {
        "operationId": "requestMetamask",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestMetamaskDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestMetamaskResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Users Wallet"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/{tenantId}/wallets/metamask/claim": {
      "post": {
        "operationId": "claimMetamask",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClaimMetamaskDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WalletResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Users Wallet"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/blockchain/webhook/event/{tenantId}": {
      "post": {
        "operationId": "receiveEventWebhook",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-pixchain-signature",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-pixchain-client-id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventNotifyDto"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid Pixchain signature"
          }
        },
        "tags": [
          "Blockchain"
        ]
      }
    },
    "/blockchain/webhook/transaction/{tenantId}": {
      "post": {
        "operationId": "receiveTransactionWebhook",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-pixchain-signature",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-pixchain-client-id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid Pixchain signature"
          }
        },
        "tags": [
          "Blockchain"
        ]
      }
    },
    "/blockchain/webhook/external-transaction-signing-request/{tenantId}": {
      "post": {
        "operationId": "receiveExternalTransactionSigningRequestWebhook",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-pixchain-signature",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-pixchain-client-id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid Pixchain signature"
          }
        },
        "tags": [
          "Blockchain"
        ]
      }
    },
    "/blockchain/balance/{address}/{chainId}": {
      "get": {
        "operationId": "getBalance",
        "summary": "",
        "deprecated": true,
        "parameters": [
          {
            "name": "address",
            "required": true,
            "in": "path",
            "example": "0x82dbB0A14F79f50c8f8e0D50FC9F1ef30Aeb6C79",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chainId",
            "required": true,
            "in": "path",
            "example": 137,
            "schema": {
              "$ref": "#/components/schemas/ChainId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Blockchain"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/blockchain/request-session-wallet-connect": {
      "post": {
        "operationId": "requestSessionWalletConnect",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWalletConnectSessionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWalletConnectSessionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Blockchain"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/blockchain/disconnect-session-wallet-connect": {
      "delete": {
        "operationId": "disconnectSessionWalletConnect",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWalletConnectSessionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Blockchain"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/auth/verify-sign-up": {
      "get": {
        "operationId": "verifySignUp",
        "parameters": [
          {
            "name": "email",
            "required": true,
            "in": "query",
            "example": "user@example.com",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response for verify sign up",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifySignupResponseDto"
                }
              }
            }
          },
          "429": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/request-confirmation-email": {
      "post": {
        "operationId": "requestConfirmationEmail",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestConfirmationEmailDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          },
          "429": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/request-password-reset": {
      "post": {
        "operationId": "requestPasswordReset",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestPasswordResetDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          },
          "429": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/reset-password": {
      "post": {
        "operationId": "resetPassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignInResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestExceptionDto"
                }
              }
            }
          },
          "429": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/signup": {
      "post": {
        "operationId": "signUp",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignInResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/signin": {
      "post": {
        "operationId": "signIn",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignInResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionDto"
                }
              }
            }
          },
          "429": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/refresh-token": {
      "post": {
        "operationId": "refreshToken",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Authentication"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/auth/signin/tenant": {
      "post": {
        "operationId": "signInTenant",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginTenantDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignInResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionDto"
                }
              }
            }
          },
          "429": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/logout": {
      "post": {
        "operationId": "logOut",
        "parameters": [],
        "responses": {
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Authentication"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/auth/jwks.json": {
      "get": {
        "operationId": "getJWKS",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JSONWebKeySetDto"
                }
              }
            }
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/tenant": {
      "post": {
        "operationId": "create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTenantDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantEntityDto"
                }
              }
            }
          },
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, superAdmin,integration,administrator",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Tenant"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantPaginateResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, superAdmin,integration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Tenant"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tenant/{tenantId}": {
      "get": {
        "operationId": "findOne",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, superAdmin,admin,integration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Tenant"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "update",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTenantDto"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, superAdmin,integration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Tenant"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "remove",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, superAdmin,integration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Tenant"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tenant/client/{tenantId}": {
      "get": {
        "operationId": "getTenantClientOrFail",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantClientResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, integration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Tenant"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tenant/profile/{tenantId}": {
      "put": {
        "operationId": "updateProfile",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTenantProfileDto"
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, superAdmin,integration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Tenant"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/public-tenant/by-hostname": {
      "get": {
        "operationId": "getCompanyByHost",
        "parameters": [
          {
            "name": "hostname",
            "required": true,
            "in": "query",
            "example": "example.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FindByHostnameDto"
                }
              }
            }
          }
        },
        "tags": [
          "Tenant Public"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tenant-access/{tenantId}": {
      "post": {
        "operationId": "create",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTenantAccessDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantAccessEntityDto"
                }
              }
            }
          },
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, superAdmin,integration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Tenant Access"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "findAll",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantAccessPaginateResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, superAdmin,integration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Tenant Access"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tenant-access/{tenantId}/{id}": {
      "get": {
        "operationId": "findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, superAdmin,integration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Tenant Access"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tenant-hosts/{tenantId}": {
      "post": {
        "operationId": "create",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTenantHostDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantHostResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Tenant Hosts"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "findAll",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantHostPaginateResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Tenant Hosts"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tenant-hosts/{tenantId}/main-host": {
      "get": {
        "operationId": "getMainHostByTenantId",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantHostEntityDto"
                }
              }
            }
          },
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Tenant Hosts"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tenant-hosts/{tenantId}/{id}": {
      "get": {
        "operationId": "findOne",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Tenant Hosts"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "update",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTenantHostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          },
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Tenant Hosts"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tenant-input/{tenantId}": {
      "post": {
        "operationId": "create",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTenantInputDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantInputEntityDto"
                }
              }
            }
          },
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, superAdmin,admin,integration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Tenant Input"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "findAll",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantInputPaginateResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, superAdmin,admin,integration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Tenant Input"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tenant-input/{tenantId}/{inputId}": {
      "patch": {
        "operationId": "updateByInputId",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "inputId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTenantInputDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantInputEntityDto"
                }
              }
            }
          },
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, superAdmin,admin,integration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Tenant Input"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "findOne",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "inputId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, superAdmin,admin,integration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Tenant Input"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tenant-input/{tenantId}/slug/{slug}": {
      "get": {
        "operationId": "listBySlugContext",
        "summary": "",
        "description": "Get all tenant param by tenant and context",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "slug",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TenantInputEntityDto"
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "TenantContextDisabledException": {
                    "description": "Tenant context 'slug' is disabled from 'tenant'",
                    "value": {
                      "statusCode": 404,
                      "message": "Tenant context 'slug' is disabled from 'tenant'",
                      "error": "Not Found"
                    }
                  },
                  "ContextBySlugNotFoundException": {
                    "description": "Context slug not exist from tenant or global.",
                    "value": {
                      "statusCode": 404,
                      "message": "Context slug not exist from tenant or global.",
                      "error": "Not Found"
                    }
                  },
                  "TenantContextNotFoundException": {
                    "description": "Tenant context 'slug' not found from 'tenant'",
                    "value": {
                      "statusCode": 404,
                      "message": "Tenant context 'slug' not found from 'tenant'",
                      "error": "Not Found"
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Tenant context 'slug' is disabled from 'tenant'"
                    },
                    "error": {
                      "type": "string",
                      "example": "Not Found"
                    }
                  },
                  "required": [
                    "statusCode",
                    "message"
                  ]
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "Tenant Input"
        ]
      }
    },
    "/users/{tenantId}/documents/{userId}": {
      "get": {
        "operationId": "findAll",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          },
          {
            "name": "type",
            "required": false,
            "in": "query",
            "description": "Filter by document type",
            "example": null,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/DataTypesEnum"
              }
            }
          },
          {
            "name": "contextId",
            "required": false,
            "in": "query",
            "description": "Filter by document contextId",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "inputId",
            "required": false,
            "in": "query",
            "description": "Filter by document inputId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentPaginateResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Users Documents"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/{tenantId}/documents/{userId}/context/{contextId}": {
      "get": {
        "operationId": "getAllByContext",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contextId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentEntityDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Users Documents"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "attachDocumentsToUserByContextId",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contextId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachDocumentsToUser"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Users Documents"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/{tenantId}/contexts/{userId}": {
      "get": {
        "operationId": "findAll",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "Filter by status",
            "example": null,
            "schema": {
              "$ref": "#/components/schemas/UserContextStatus"
            }
          },
          {
            "name": "contextId",
            "required": false,
            "in": "query",
            "description": "Filter by document contextId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersContextsPaginateResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Users Contexts"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/{tenantId}/contexts/{userId}/{contextId}/approve": {
      "patch": {
        "operationId": "approve",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contextId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserContextStatusDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Users Contexts"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/{tenantId}/contexts/{userId}/{contextId}/reject": {
      "patch": {
        "operationId": "reject",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contextId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserContextStatusDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Users Contexts"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/{tenantId}/contexts/{userId}/{contextId}/require-review": {
      "patch": {
        "operationId": "requireReview",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contextId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequiredReviewContextStatusDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Users Contexts"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/assets/{tenantId}": {
      "post": {
        "operationId": "requestUpload",
        "summary": "",
        "description": "Creates a new request to upload some asset (image or pdf) in our service. You must use this endpoint response to upload assets using the specific provider apis (ex: Cloudinary)",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestAssetUploadDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Asset upload request successfully created!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetEntityWithProviderUploadParamsDto"
                }
              }
            }
          }
        },
        "tags": [
          "Assets"
        ]
      }
    },
    "/contexts": {
      "post": {
        "operationId": "create",
        "summary": "",
        "description": "Create a new context",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContextsDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Context created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContextDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Integration API key or JWT required"
          },
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, superAdmin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          },
          "409": {
            "content": {
              "application/json": {
                "examples": {
                  "DuplicatedContextException": {
                    "description": "Context \"slug\" already exists for tenant \"tenantId\".",
                    "value": {
                      "statusCode": 409,
                      "message": "Context \"slug\" already exists for tenant \"tenantId\".",
                      "error": "Conflict"
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 409
                    },
                    "message": {
                      "type": "string",
                      "example": "Context \"slug\" already exists for tenant \"tenantId\"."
                    },
                    "error": {
                      "type": "string",
                      "example": "Conflict"
                    }
                  },
                  "required": [
                    "statusCode",
                    "message"
                  ]
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "Contexts"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "listAll",
        "summary": "",
        "description": "Returns all contexts",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns all contexts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContextDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Integration API key or JWT required"
          },
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, superAdmin,admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Contexts"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/contexts/{id}": {
      "patch": {
        "operationId": "update",
        "summary": "",
        "description": "Update a context by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateContextsDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized - Integration API key or JWT required"
          },
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, superAdmin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          },
          "404": {
            "description": "Not found context to update",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DuplicatedContextException"
                }
              }
            }
          }
        },
        "tags": [
          "Contexts"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "delete",
        "summary": "",
        "description": "Delete a context by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized - Integration API key or JWT required"
          },
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, superAdmin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Contexts"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tenant-context/{tenantId}": {
      "post": {
        "operationId": "create",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTenantContextDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantContextDto"
                }
              }
            }
          },
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, superAdmin,admin,integration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Tenant Context"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "findAll",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantInputPaginateResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, superAdmin,admin,integration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Tenant Context"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tenant-context/{tenantId}/{tenantContextId}": {
      "get": {
        "operationId": "findOneByTenantContextId",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantContextId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantContextDto"
                }
              }
            }
          },
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, superAdmin,admin,integration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Tenant Context"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "updateByTenantContextId",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantContextId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTenantContextDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantContextDto"
                }
              }
            }
          },
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, superAdmin,admin,integration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Tenant Context"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/integrations": {
      "get": {
        "operationId": "list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IntegrationResponseDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Integration"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/whitelists/{tenantId}/check-user": {
      "get": {
        "operationId": "checkUserInMultipleWhitelists",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "query",
            "example": "00000000-0000-0000-0000-000000000000",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "whitelistsIds",
            "required": true,
            "in": "query",
            "example": [
              "00000000-0000-0000-0000-000000000000"
            ],
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckUserInMultipleWhitelistsResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Whitelists"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/whitelists/{tenantId}": {
      "get": {
        "operationId": "findWhitelists",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WhitelistPaginateResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Whitelists"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "createWhitelist",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateWhitelistDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WhitelistResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Whitelists"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/whitelists/{tenantId}/{id}": {
      "get": {
        "operationId": "getWhitelist",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WhitelistResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Whitelists"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "updateWhitelist",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateWhitelistDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WhitelistResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Whitelists"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteWhitelist",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Whitelists"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/whitelists/{tenantId}/{id}/promote-on-chain": {
      "patch": {
        "operationId": "promoteWhitelistOnChain",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WhitelistOnChainDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WalletGroupResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Whitelists"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/whitelists/{tenantId}/{id}/check-user": {
      "get": {
        "operationId": "checkUserInWhitelist",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "query",
            "example": "00000000-0000-0000-0000-000000000000",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckWhitelistUserResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Whitelists"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/whitelists/{tenantId}/{id}/entries": {
      "get": {
        "operationId": "findWhitelistEntries",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "example": "createdAt",
            "schema": {
              "$ref": "#/components/schemas/WhitelistEntriesSortBy"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          },
          {
            "name": "type",
            "required": false,
            "in": "query",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "user_id",
                  "email",
                  "wallet_address",
                  "collection_holder"
                ]
              }
            }
          },
          {
            "name": "showWallets",
            "required": false,
            "in": "query",
            "example": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WhitelistEntryPaginateResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Whitelists"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "createWhitelistEntry",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWhitelistEntryDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WhitelistEntryResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Whitelists"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/whitelists/{tenantId}/{id}/entries/{entryId}": {
      "delete": {
        "operationId": "deleteWhitelistEntry",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entryId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "403": {
            "description": "Need user with one of these roles: superAdmin, integration, application, admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpExceptionDto"
                }
              }
            }
          }
        },
        "tags": [
          "Whitelists"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "Pixway ID",
    "description": "",
    "version": "0.7.3",
    "contact": {}
  },
  "tags": [],
  "servers": [
    {
      "url": "https://pixwayid.stg.pixway.io",
      "description": "Pixway ID Server",
      "variables": {}
    }
  ],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http",
        "name": "JWT",
        "description": "Enter JWT token",
        "in": "header"
      }
    },
    "schemas": {
      "UserPasswordDto": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "example": "P@ssw0rd",
            "description": "Password should include lowercase, uppercase and digits"
          },
          "confirmation": {
            "type": "string",
            "example": "P@ssw0rd"
          }
        },
        "required": [
          "password",
          "confirmation"
        ]
      },
      "UserRoleEnum": {
        "type": "string",
        "enum": [
          "superAdmin",
          "admin",
          "operator",
          "user"
        ]
      },
      "I18nLocaleEnum": {
        "type": "string",
        "enum": [
          "pt-br",
          "en"
        ]
      },
      "CreateAddressDto": {
        "type": "object",
        "properties": {
          "street": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "district": {
            "type": "string"
          },
          "complement": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "coordinates": {
            "type": "string"
          }
        },
        "required": [
          "city",
          "state",
          "country"
        ]
      },
      "VerificationType": {
        "type": "string",
        "enum": [
          "numeric",
          "invisible"
        ]
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "example": "P@ssw0rd",
            "description": "Password should include lowercase, uppercase and digits"
          },
          "confirmation": {
            "type": "string",
            "example": "P@ssw0rd"
          },
          "tenantId": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "role": {
            "example": "user",
            "$ref": "#/components/schemas/UserRoleEnum"
          },
          "phone": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "example": "user@example.com"
          },
          "i18nLocale": {
            "example": "pt-br",
            "$ref": "#/components/schemas/I18nLocaleEnum"
          },
          "address": {
            "$ref": "#/components/schemas/CreateAddressDto"
          },
          "sendEmail": {
            "type": "object",
            "example": true
          },
          "callbackUrl": {
            "type": "string"
          },
          "verificationType": {
            "default": "invisible",
            "$ref": "#/components/schemas/VerificationType"
          }
        },
        "required": [
          "password",
          "confirmation",
          "tenantId",
          "role",
          "email",
          "i18nLocale"
        ]
      },
      "AddressResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "street": {
            "type": "string",
            "example": "Street"
          },
          "number": {
            "type": "string",
            "example": "123"
          },
          "district": {
            "type": "string",
            "example": null
          },
          "complement": {
            "type": "string",
            "example": null
          },
          "city": {
            "type": "string",
            "example": "Sao Paulo"
          },
          "state": {
            "type": "string",
            "example": "Sao Paulo"
          },
          "country": {
            "type": "string",
            "example": "Brazil"
          },
          "postalCode": {
            "type": "string",
            "example": null
          },
          "coordinates": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "id"
        ]
      },
      "WalletTypes": {
        "type": "string",
        "enum": [
          "vault",
          "metamask"
        ]
      },
      "WalletStatus": {
        "type": "string",
        "enum": [
          "unverified",
          "ready",
          "blocked"
        ]
      },
      "WalletResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "address": {
            "type": "string",
            "example": "0x0000000000000000000000000000000000000000"
          },
          "ownerId": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "example": "vault",
            "$ref": "#/components/schemas/WalletTypes"
          },
          "status": {
            "example": "ready",
            "$ref": "#/components/schemas/WalletStatus"
          }
        },
        "required": [
          "id",
          "tenantId",
          "address",
          "ownerId",
          "type",
          "status"
        ]
      },
      "KycStatus": {
        "type": "string",
        "enum": [
          "noRequired",
          "approved",
          "denied",
          "pending",
          "pendingReview"
        ]
      },
      "UserPublicResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string",
            "example": "email@example.com"
          },
          "phone": {
            "type": "string",
            "example": "+55(11)99999-9999"
          },
          "verified": {
            "type": "boolean",
            "example": true
          },
          "roles": {
            "type": "array",
            "example": [
              "user"
            ],
            "default": [
              "user"
            ],
            "items": {
              "type": "string",
              "enum": [
                "superAdmin",
                "admin",
                "operator",
                "user"
              ]
            }
          },
          "i18nLocale": {
            "example": "pt-br",
            "$ref": "#/components/schemas/I18nLocaleEnum"
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "mainWalletId": {
            "type": "string",
            "format": "uuid"
          },
          "addressId": {
            "type": "string",
            "format": "uuid"
          },
          "address": {
            "$ref": "#/components/schemas/AddressResponseDto"
          },
          "mainWallet": {
            "$ref": "#/components/schemas/WalletResponseDto"
          },
          "wallets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WalletResponseDto"
            }
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "kycStatus": {
            "nullable": false,
            "$ref": "#/components/schemas/KycStatus"
          }
        },
        "required": [
          "id",
          "email",
          "verified",
          "roles",
          "i18nLocale",
          "kycStatus"
        ]
      },
      "HttpExceptionDto": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "example": "2022-07-25T17:24:07.042Z"
          },
          "path": {
            "type": "string",
            "example": "/api/foo/bar"
          },
          "error": {
            "type": "string"
          },
          "statusCode": {
            "type": "number",
            "example": 500
          },
          "message": {
            "type": "object",
            "example": "Something went wrong"
          },
          "data": {
            "type": "object",
            "example": null
          }
        },
        "required": [
          "timestamp",
          "path",
          "error",
          "statusCode",
          "message"
        ]
      },
      "InviteUserDto": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000001"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "example": "email@example.com"
          },
          "i18nLocale": {
            "example": "pt-br",
            "$ref": "#/components/schemas/I18nLocaleEnum"
          },
          "generateRandomPassword": {
            "type": "boolean",
            "example": false
          },
          "password": {
            "type": "string",
            "example": "P@ssw0rd",
            "description": "Password should include lowercase, uppercase and digits"
          },
          "sendEmail": {
            "type": "boolean",
            "example": true
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "example": "user",
            "$ref": "#/components/schemas/UserRoleEnum"
          },
          "royaltyEligible": {
            "type": "boolean",
            "example": false
          },
          "verificationType": {
            "default": "invisible",
            "$ref": "#/components/schemas/VerificationType"
          }
        },
        "required": [
          "tenantId",
          "email",
          "i18nLocale"
        ]
      },
      "OrderByEnum": {
        "type": "string",
        "enum": [
          "ASC",
          "DESC"
        ]
      },
      "PaginationMetaDto": {
        "type": "object",
        "properties": {
          "itemCount": {
            "type": "number",
            "example": 1
          },
          "totalItems": {
            "type": "number",
            "example": 1
          },
          "itemsPerPage": {
            "type": "number",
            "example": 1
          },
          "totalPages": {
            "type": "number",
            "example": 1
          },
          "currentPage": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "itemCount",
          "itemsPerPage",
          "currentPage"
        ]
      },
      "PaginationLinksDto": {
        "type": "object",
        "properties": {
          "first": {
            "type": "string",
            "example": "http://example.com?page=1"
          },
          "prev": {
            "type": "string",
            "example": "http://example.com?page=1"
          },
          "next": {
            "type": "string",
            "example": "http://example.com?page=2"
          },
          "last": {
            "type": "string",
            "example": "http://example.com?page=3"
          }
        }
      },
      "UserPaginateResponseDto": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserPublicResponseDto"
            }
          }
        },
        "required": [
          "meta",
          "items"
        ]
      },
      "UpdateAddressDto": {
        "type": "object",
        "properties": {
          "street": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "district": {
            "type": "string"
          },
          "complement": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "coordinates": {
            "type": "string"
          }
        }
      },
      "UpdateProfileUserDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "i18nLocale": {
            "example": "pt-br",
            "$ref": "#/components/schemas/I18nLocaleEnum"
          },
          "address": {
            "$ref": "#/components/schemas/UpdateAddressDto"
          }
        }
      },
      "ChangePasswordDto": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "example": "P@ssw0rd",
            "description": "Password should include lowercase, uppercase and digits"
          },
          "confirmation": {
            "type": "string",
            "example": "P@ssw0rd"
          },
          "oldPassword": {
            "type": "string"
          }
        },
        "required": [
          "password",
          "confirmation",
          "oldPassword"
        ]
      },
      "MainWalletDto": {
        "type": "object",
        "properties": {
          "walletId": {
            "type": "string"
          }
        },
        "required": [
          "walletId"
        ]
      },
      "UpdateTokenDto": {
        "type": "object",
        "properties": {
          "verificationType": {
            "type": "string",
            "enum": [
              "numeric",
              "invisible"
            ],
            "default": "invisible"
          },
          "verificationExpire": {
            "type": "string",
            "example": "15m"
          }
        }
      },
      "UserTokenResponseDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "email@example.com"
          },
          "token": {
            "type": "string",
            "example": "b8ee934f8d9c6704b982c14b95ba3266fef9bba7798ed4885a05c70dbb4545435517cdd25f851e7522ad503e04ccb691a18f507b792866c3282d13abc2a09cb2;1654178219308"
          },
          "code": {
            "type": "string",
            "example": "b8ee934f8d9c6704b982c14b95ba3266fef9bba7798ed4885a05c70dbb4545435517cdd25f851e7522ad503e04ccb691a18f507b792866c3282d13abc2a09cb2"
          },
          "expire": {
            "type": "string",
            "example": "1654178219308"
          }
        },
        "required": [
          "email",
          "token",
          "code",
          "expire"
        ]
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "example": "P@ssw0rd",
            "description": "Password should include lowercase, uppercase and digits"
          },
          "role": {
            "example": "user",
            "$ref": "#/components/schemas/UserRoleEnum"
          },
          "phone": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "example": "user@example.com"
          },
          "i18nLocale": {
            "example": "pt-br",
            "$ref": "#/components/schemas/I18nLocaleEnum"
          },
          "verificationType": {
            "default": "invisible",
            "$ref": "#/components/schemas/VerificationType"
          },
          "address": {
            "$ref": "#/components/schemas/UpdateAddressDto"
          }
        }
      },
      "AccountCompleteRetryDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "verificationType": {
            "default": "invisible",
            "$ref": "#/components/schemas/VerificationType"
          }
        },
        "required": [
          "email",
          "tenantId"
        ]
      },
      "ChainId": {
        "type": "string",
        "enum": [
          "1",
          "3",
          "4",
          "42",
          "1337",
          "80001",
          "137"
        ]
      },
      "RequestMetamaskDto": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "example": "0x9FeCC07273d5F5Cb22FF10c5Bb7Dc49e82e01ce9"
          },
          "chainId": {
            "default": 137,
            "example": 137,
            "$ref": "#/components/schemas/ChainId"
          }
        },
        "required": [
          "address",
          "chainId"
        ]
      },
      "RequestMetamaskResponseDto": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "example": "0x9FeCC07273d5F5Cb22FF10c5Bb7Dc49e82e01ce9"
          },
          "chainId": {
            "default": 137,
            "example": 137,
            "$ref": "#/components/schemas/ChainId"
          },
          "message": {
            "type": "string",
            "example": ""
          },
          "nonce": {
            "type": "number",
            "example": 1666581369815
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "address",
          "chainId",
          "message",
          "nonce",
          "userId"
        ]
      },
      "ClaimMetamaskDto": {
        "type": "object",
        "properties": {
          "signature": {
            "type": "string",
            "example": "6ef8fe3b-d901-4f01-9aeb-20fecc545521"
          }
        },
        "required": [
          "signature"
        ]
      },
      "EventNotifyDto": {
        "type": "object",
        "properties": {
          "blockNumber": {
            "type": "number",
            "example": 256
          },
          "blockHash": {
            "type": "string",
            "example": "0x75a3c22ef6e394a496fb7cdb16c9c5a975d6c4950f931a9df9bff38a2a9371a7"
          },
          "transactionHash": {
            "type": "string",
            "example": "0x9882f164a13ad7cfaeb682d36415f6bd8d0348f7f738b85c7668665fa00956c4"
          },
          "address": {
            "type": "string",
            "example": "0x82dbB0A14F79f50c8f8e0D50FC9F1ef30Aeb6C79"
          },
          "topics": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "data": {
            "type": "string",
            "example": "0x"
          },
          "logIndex": {
            "type": "number",
            "example": 0
          },
          "chainId": {
            "default": 137,
            "example": 137,
            "$ref": "#/components/schemas/ChainId"
          },
          "timestamp": {
            "type": "number",
            "example": 1653579785
          },
          "name": {
            "type": "string",
            "example": "Transfer"
          },
          "signature": {
            "type": "string",
            "example": "Transfer(address,address,uint256)"
          },
          "topic": {
            "type": "string",
            "example": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
          },
          "transactionIndex": {
            "type": "number",
            "example": 0
          },
          "args": {
            "type": "object",
            "example": {
              "from": "0x0000000000000000000000000000000000000000",
              "to": "0xe5dc6eb721b535ece3be1b3220be2ce41ac284fc",
              "tokenId": {
                "_hex": "0x03",
                "_isBigNumber": true
              }
            }
          },
          "transactionId": {
            "type": "string"
          }
        },
        "required": [
          "blockNumber",
          "blockHash",
          "transactionHash",
          "address",
          "topics",
          "data",
          "logIndex",
          "chainId",
          "timestamp",
          "name",
          "signature",
          "topic",
          "transactionIndex",
          "args"
        ]
      },
      "RequestWalletConnectSessionDto": {
        "type": "object",
        "properties": {
          "chainId": {
            "default": 137,
            "example": 137,
            "$ref": "#/components/schemas/ChainId"
          },
          "address": {
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "chainId",
          "address",
          "uri"
        ]
      },
      "ResponseWalletConnectSessionDto": {
        "type": "object",
        "properties": {
          "chainId": {
            "default": 137,
            "example": 137,
            "$ref": "#/components/schemas/ChainId"
          },
          "address": {
            "type": "string"
          },
          "handshakeTopic": {
            "type": "string"
          }
        },
        "required": [
          "chainId",
          "address",
          "handshakeTopic"
        ]
      },
      "JwtPayloadDto": {
        "type": "object",
        "properties": {
          "sub": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000001"
          },
          "iss": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000001"
          },
          "aud": {
            "example": "00000000-0000-0000-0000-000000000001",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "exp": {
            "type": "number",
            "example": 1516239022
          },
          "iat": {
            "type": "number",
            "example": 1516239022
          },
          "tenantId": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000001"
          }
        },
        "required": [
          "sub",
          "iss",
          "tenantId"
        ]
      },
      "JwtType": {
        "type": "string",
        "enum": [
          "user",
          "tenant"
        ]
      },
      "UserJwtPayloadDto": {
        "type": "object",
        "properties": {
          "sub": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000001"
          },
          "iss": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000001"
          },
          "aud": {
            "example": "00000000-0000-0000-0000-000000000001",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "exp": {
            "type": "number",
            "example": 1516239022
          },
          "iat": {
            "type": "number",
            "example": 1516239022
          },
          "tenantId": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000001"
          },
          "email": {
            "type": "string",
            "example": "user@example.com"
          },
          "name": {
            "type": "string",
            "example": "Jon Doe"
          },
          "roles": {
            "type": "array",
            "example": "user",
            "default": "user",
            "items": {
              "$ref": "#/components/schemas/UserRoleEnum"
            }
          },
          "verified": {
            "type": "boolean",
            "example": true
          },
          "type": {
            "example": "user",
            "default": "user",
            "$ref": "#/components/schemas/JwtType"
          }
        },
        "required": [
          "sub",
          "iss",
          "tenantId",
          "email",
          "roles",
          "verified",
          "type"
        ]
      },
      "TenantRoleEnum": {
        "type": "string",
        "enum": [
          "application",
          "administrator",
          "integration"
        ]
      },
      "TenantJwtPayloadDto": {
        "type": "object",
        "properties": {
          "sub": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000001"
          },
          "iss": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000001"
          },
          "aud": {
            "example": "00000000-0000-0000-0000-000000000001",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "exp": {
            "type": "number",
            "example": 1516239022
          },
          "iat": {
            "type": "number",
            "example": 1516239022
          },
          "tenantId": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000001"
          },
          "roles": {
            "type": "array",
            "example": "application",
            "default": "application",
            "items": {
              "$ref": "#/components/schemas/TenantRoleEnum"
            }
          },
          "type": {
            "example": "tenant",
            "default": "tenant",
            "$ref": "#/components/schemas/JwtType"
          }
        },
        "required": [
          "sub",
          "iss",
          "tenantId",
          "roles",
          "type"
        ]
      },
      "VerifySignupResponseDto": {
        "type": "object",
        "properties": {
          "verified": {
            "type": "boolean",
            "example": true,
            "default": true
          }
        },
        "required": [
          "verified"
        ]
      },
      "TooManyRequestsExceptionDto": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "example": "2022-07-25T17:24:07.042Z"
          },
          "path": {
            "type": "string",
            "example": "/api/foo/bar"
          },
          "error": {
            "type": "string"
          },
          "statusCode": {
            "type": "number",
            "example": 429
          },
          "message": {
            "type": "object",
            "example": "Too many requests"
          },
          "data": {
            "type": "object",
            "example": null
          }
        },
        "required": [
          "timestamp",
          "path",
          "error",
          "statusCode",
          "message"
        ]
      },
      "RequestConfirmationEmailDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "tenantId": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000001"
          },
          "callbackUrl": {
            "type": "string"
          },
          "verificationType": {
            "default": "invisible",
            "$ref": "#/components/schemas/VerificationType"
          }
        },
        "required": [
          "email"
        ]
      },
      "RequestPasswordResetDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "email@example.com"
          },
          "tenantId": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000001"
          },
          "callbackUrl": {
            "type": "string"
          },
          "verificationType": {
            "default": "invisible",
            "$ref": "#/components/schemas/VerificationType"
          }
        },
        "required": [
          "email"
        ]
      },
      "ResetPasswordDto": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "example": "P@ssw0rd",
            "description": "Password should include lowercase, uppercase and digits"
          },
          "confirmation": {
            "type": "string",
            "example": "P@ssw0rd"
          },
          "email": {
            "type": "string",
            "example": "user@example.com"
          },
          "token": {
            "type": "string"
          }
        },
        "required": [
          "password",
          "confirmation",
          "email",
          "token"
        ]
      },
      "SignInResponseDto": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJjOTFhZDIyOC05NTdhLTQxMDQtOWIxMy0xOGUyNzk5MDE4MDMiLCJpc3MiOiI1YmQ5NmFhZi0xODg4LTQ5M2UtYjg0ZS03YzU0YTQ3MzE4NjgiLCJhdWQiOiI1YmQ5NmFhZi0xODg4LTQ5M2UtYjg0ZS03YzU0YTQ3MzE4NjgiLCJlbWFpbCI6InBpeHdheUB3M2Jsb2NrLmlvIiwibmFtZSI6IlBpeHdheSIsInJvbGUiOiJhZG1pbiIsImNvbXBhbnlJZCI6IjViZDk2YWFmLTE4ODgtNDkzZS1iODRlLTdjNTRhNDczMTg2OCIsInRlbmFudElkIjoiNWJkOTZhYWYtMTg4OC00OTNlLWI4NGUtN2M1NGE0NzMxODY4IiwidmVyaWZpZWQiOnRydWUsImlhdCI6MTY1ODUwODE3OSwiZXhwIjoxNjkwMDQ0MTc5fQ.L_0Py_M_1Ija_QnFKl7uNZr9fpkcVpZSv-tnNf07YQOcIEuR-TU0S9DMkLkHtmYrHKJe_vzzf14FS7J43NYVILn3NrXb-pC5-YO8V3JnMX4yBsgM2t0xdqEW6fqILk8_oxXsDFAhNkaNeBa2ljNilDncSepps7q69PP-TP7JVkjKQg2Za_E6ZwU"
          },
          "refreshToken": {
            "type": "string",
            "example": "eyJhbGciOiJSUzI1NiIsInR5cCI6InJlZnJlc2gifQ.eyJzdWIiOiJjOTFhZDIyOC05NTdhLTQxMDQtOWIxMy0xOGUyNzk5MDE4MDMiLCJpc3MiOiI1YmQ5NmFhZi0xODg4LTQ5M2UtYjg0ZS03YzU0YTQ3MzE4NjgiLCJhdWQiOiI1YmQ5NmFhZi0xODg4LTQ5M2UtYjg0ZS03YzU0YTQ3MzE4NjgiLCJ0ZW5hbnRJZCI6IjViZDk2YWFmLTE4ODgtNDkzZS1iODRlLTdjNTRhNDczMTg2OCIsInRva2VuSGFzaCI6ImJiMmFjMzE4M2EzZDZlMDljYTI2ZDkzNDEzNjQyNzU4MGY3Yjc5NWVlYWU3YTFlYzUzNDU2MjU5NThjMDZhYWQiLCJpYXQiOjE2NTg1MDgxNzksImV4cCI6MTY5MDA0NDE3OX0.au6dcpbcSmF134J335G4CymEUlwK39TT-4jXQwEUm0zRokFBiHpkXZzy23fTufyo_XzW_Tr_IUfO9b_y5e0thjIfvng4dS7akdeQAykcN7nRhwNBtqCVZxFHyZE39yzz38JLMwC00EtaKowM6lPykJYC5qZC0bBj4g4Yb1GG9IU5dQodibdXj00"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserJwtPayloadDto"
              },
              {
                "$ref": "#/components/schemas/TenantJwtPayloadDto"
              }
            ]
          }
        },
        "required": [
          "token",
          "refreshToken",
          "data"
        ]
      },
      "BadRequestExceptionDto": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "example": "2022-07-25T17:24:07.042Z"
          },
          "path": {
            "type": "string",
            "example": "/api/foo/bar"
          },
          "error": {
            "type": "string"
          },
          "statusCode": {
            "type": "number",
            "example": 400
          },
          "message": {
            "type": "object",
            "example": "Bad Request"
          },
          "data": {
            "type": "object",
            "example": null
          }
        },
        "required": [
          "timestamp",
          "path",
          "error",
          "statusCode",
          "message"
        ]
      },
      "SignupUserDto": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "example": "P@ssw0rd",
            "description": "Password should include lowercase, uppercase and digits"
          },
          "confirmation": {
            "type": "string",
            "example": "P@ssw0rd"
          },
          "tenantId": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "email": {
            "type": "string",
            "example": "email@example.com"
          },
          "name": {
            "type": "string",
            "example": "Jon Doe"
          },
          "i18nLocale": {
            "example": "pt-br",
            "default": "pt-br",
            "$ref": "#/components/schemas/I18nLocaleEnum"
          },
          "callbackUrl": {
            "type": "string"
          },
          "verificationType": {
            "default": "invisible",
            "$ref": "#/components/schemas/VerificationType"
          },
          "phone": {
            "type": "string"
          }
        },
        "required": [
          "password",
          "confirmation",
          "tenantId",
          "email",
          "callbackUrl"
        ]
      },
      "UnauthorizedExceptionDto": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "example": "2022-07-25T17:24:07.042Z"
          },
          "path": {
            "type": "string",
            "example": "/api/foo/bar"
          },
          "error": {
            "type": "string"
          },
          "statusCode": {
            "type": "number",
            "example": 401
          },
          "message": {
            "type": "object",
            "example": "Unauthorized"
          },
          "data": {
            "type": "object",
            "example": null
          }
        },
        "required": [
          "timestamp",
          "path",
          "error",
          "statusCode",
          "message"
        ]
      },
      "LoginUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "example": "P@ssw0rd"
          },
          "tenantId": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000001"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "RefreshTokenDto": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string",
            "example": "eyJhbGciOiJSUzI1NiIsInR5cCI6InJlZnJlc2gifQ.eyJzdWIiOiI4NGViM2Q2NC01OTk4LTRjM2UtODliMS0yZTgyZmQ2NDRjMDciLCJpc3MiOiIwMDAwMDAwMC0wMDAwLTAwMDAtMDAwMC0wMDAwMDAwMDAwMDEiLCJhdWQiOiIwMDAwMDAwMC0wMDAwLTAwMDAtMDAwMC0wMDAwMDAwMDAwMDEiLCJjb21wYW55SWQiOiIwMDAwMDAwMC0wMDAwLTAwMDAtMDAwMC0wMDAwMDAwMDAwMDEiLCJ0b2tlbkhhc2giOiI5NGFkMzFjMjcwMWI0NzQxNjk5ZjI1YTA4NWM0NmQyNDE4ZTk2MjNhYTcyYjM3MGZhZWZkNWJhYWYzYzM3YzgzIiwiaWF0IjoxNjU3MzEwMzQwLCJleHAiOjE2NTc0ODMxNDB9.epg4Grc6LkJMMxNlFbsdEc5Rq2nupXZTsFQeD-JgKZMWg4ey_ialD-mmSBehHD_xFF4Ho_BbWG1ld9aCuQBQcft4zxDfMdxogM5fMfdhAnAccM7a4J0NyKECzYHhIDe_jnrpT4QVHs4x78NIookQiKguANuSa7dNViFphpC9K5LRcxVwS6sEqT8"
          }
        },
        "required": [
          "refreshToken"
        ]
      },
      "RefreshTokenResponseDto": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJjOTFhZDIyOC05NTdhLTQxMDQtOWIxMy0xOGUyNzk5MDE4MDMiLCJpc3MiOiI1YmQ5NmFhZi0xODg4LTQ5M2UtYjg0ZS03YzU0YTQ3MzE4NjgiLCJhdWQiOiI1YmQ5NmFhZi0xODg4LTQ5M2UtYjg0ZS03YzU0YTQ3MzE4NjgiLCJlbWFpbCI6InBpeHdheUB3M2Jsb2NrLmlvIiwibmFtZSI6IlBpeHdheSIsInJvbGUiOiJhZG1pbiIsImNvbXBhbnlJZCI6IjViZDk2YWFmLTE4ODgtNDkzZS1iODRlLTdjNTRhNDczMTg2OCIsInRlbmFudElkIjoiNWJkOTZhYWYtMTg4OC00OTNlLWI4NGUtN2M1NGE0NzMxODY4IiwidmVyaWZpZWQiOnRydWUsImlhdCI6MTY1ODUwODE3OSwiZXhwIjoxNjkwMDQ0MTc5fQ.L_0Py_M_1Ija_QnFKl7uNZr9fpkcVpZSv-tnNf07YQOcIEuR-TU0S9DMkLkHtmYrHKJe_vzzf14FS7J43NYVILn3NrXb-pC5-YO8V3JnMX4yBsgM2t0xdqEW6fqILk8_oxXsDFAhNkaNeBa2ljNilDncSepps7q69PP-TP7JVkjKQg2Za_E6ZwU"
          },
          "refreshToken": {
            "type": "string",
            "example": "eyJhbGciOiJSUzI1NiIsInR5cCI6InJlZnJlc2gifQ.eyJzdWIiOiJjOTFhZDIyOC05NTdhLTQxMDQtOWIxMy0xOGUyNzk5MDE4MDMiLCJpc3MiOiI1YmQ5NmFhZi0xODg4LTQ5M2UtYjg0ZS03YzU0YTQ3MzE4NjgiLCJhdWQiOiI1YmQ5NmFhZi0xODg4LTQ5M2UtYjg0ZS03YzU0YTQ3MzE4NjgiLCJ0ZW5hbnRJZCI6IjViZDk2YWFmLTE4ODgtNDkzZS1iODRlLTdjNTRhNDczMTg2OCIsInRva2VuSGFzaCI6ImJiMmFjMzE4M2EzZDZlMDljYTI2ZDkzNDEzNjQyNzU4MGY3Yjc5NWVlYWU3YTFlYzUzNDU2MjU5NThjMDZhYWQiLCJpYXQiOjE2NTg1MDgxNzksImV4cCI6MTY5MDA0NDE3OX0.au6dcpbcSmF134J335G4CymEUlwK39TT-4jXQwEUm0zRokFBiHpkXZzy23fTufyo_XzW_Tr_IUfO9b_y5e0thjIfvng4dS7akdeQAykcN7nRhwNBtqCVZxFHyZE39yzz38JLMwC00EtaKowM6lPykJYC5qZC0bBj4g4Yb1GG9IU5dQodibdXj00"
          }
        },
        "required": [
          "token",
          "refreshToken"
        ]
      },
      "ForbiddenExceptionDto": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "example": "2022-07-25T17:24:07.042Z"
          },
          "path": {
            "type": "string",
            "example": "/api/foo/bar"
          },
          "error": {
            "type": "string"
          },
          "statusCode": {
            "type": "number",
            "example": 403
          },
          "message": {
            "type": "object",
            "example": "Forbidden"
          },
          "data": {
            "type": "object",
            "example": null
          }
        },
        "required": [
          "timestamp",
          "path",
          "error",
          "statusCode",
          "message"
        ]
      },
      "LoginTenantDto": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          },
          "tenantId": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000001"
          }
        },
        "required": [
          "key",
          "secret",
          "tenantId"
        ]
      },
      "JSONWebKeyDto": {
        "type": "object",
        "properties": {
          "kty": {
            "type": "string",
            "example": "RSA"
          },
          "kid": {
            "type": "string",
            "example": "LySdYaP3_-DOrOElTtHy9TAM9EZ8veMzPftUWibTTNI"
          },
          "alg": {
            "type": "string"
          },
          "n": {
            "type": "string"
          },
          "e": {
            "type": "string"
          }
        },
        "required": [
          "kty",
          "kid"
        ]
      },
      "JSONWebKeySetDto": {
        "type": "object",
        "properties": {
          "keys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JSONWebKeyDto"
            }
          }
        },
        "required": [
          "keys"
        ]
      },
      "CountryCodeEnum": {
        "type": "string",
        "enum": [
          "BGD",
          "BEL",
          "BFA",
          "BGR",
          "BIH",
          "BRB",
          "WLF",
          "BLM",
          "BMU",
          "BRN",
          "BOL",
          "BHR",
          "BDI",
          "BEN",
          "BTN",
          "JAM",
          "BVT",
          "BWA",
          "WSM",
          "BES",
          "BRA",
          "BHS",
          "JEY",
          "BLR",
          "BLZ",
          "RUS",
          "RWA",
          "SRB",
          "TLS",
          "REU",
          "TKM",
          "TJK",
          "ROU",
          "TKL",
          "GNB",
          "GUM",
          "GTM",
          "SGS",
          "GRC",
          "GNQ",
          "GLP",
          "JPN",
          "GUY",
          "GGY",
          "GUF",
          "GEO",
          "GRD",
          "GBR",
          "GAB",
          "SLV",
          "GIN",
          "GMB",
          "GRL",
          "GIB",
          "GHA",
          "OMN",
          "TUN",
          "JOR",
          "HRV",
          "HTI",
          "HUN",
          "HKG",
          "HND",
          "HMD",
          "VEN",
          "PRI",
          "PSE",
          "PLW",
          "PRT",
          "SJM",
          "PRY",
          "IRQ",
          "PAN",
          "PYF",
          "PNG",
          "PER",
          "PAK",
          "PHL",
          "PCN",
          "POL",
          "SPM",
          "ZMB",
          "ESH",
          "EST",
          "EGY",
          "ZAF",
          "ECU",
          "ITA",
          "VNM",
          "SLB",
          "ETH",
          "SOM",
          "ZWE",
          "SAU",
          "ESP",
          "ERI",
          "MNE",
          "MDA",
          "MDG",
          "MAF",
          "MAR",
          "MCO",
          "UZB",
          "MMR",
          "MLI",
          "MAC",
          "MNG",
          "MHL",
          "MKD",
          "MUS",
          "MLT",
          "MWI",
          "MDV",
          "MTQ",
          "MNP",
          "MSR",
          "MRT",
          "IMN",
          "UGA",
          "TZA",
          "MYS",
          "MEX",
          "ISR",
          "FRA",
          "IOT",
          "SHN",
          "FIN",
          "FJI",
          "FLK",
          "FSM",
          "FRO",
          "NIC",
          "NLD",
          "NOR",
          "NAM",
          "VUT",
          "NCL",
          "NER",
          "NFK",
          "NGA",
          "NZL",
          "NPL",
          "NRU",
          "NIU",
          "COK",
          "XKX",
          "CIV",
          "CHE",
          "COL",
          "CHN",
          "CMR",
          "CHL",
          "CCK",
          "CAN",
          "COG",
          "CAF",
          "COD",
          "CZE",
          "CYP",
          "CXR",
          "CRI",
          "CUW",
          "CPV",
          "CUB",
          "SWZ",
          "SYR",
          "SXM",
          "KGZ",
          "KEN",
          "SSD",
          "SUR",
          "KIR",
          "KHM",
          "KNA",
          "COM",
          "STP",
          "SVK",
          "KOR",
          "SVN",
          "PRK",
          "KWT",
          "SEN",
          "SMR",
          "SLE",
          "SYC",
          "KAZ",
          "CYM",
          "SGP",
          "SWE",
          "SDN",
          "DOM",
          "DMA",
          "DJI",
          "DNK",
          "VGB",
          "DEU",
          "YEM",
          "DZA",
          "USA",
          "URY",
          "MYT",
          "UMI",
          "LBN",
          "LCA",
          "LAO",
          "TUV",
          "TWN",
          "TTO",
          "TUR",
          "LKA",
          "LIE",
          "LVA",
          "TON",
          "LTU",
          "LUX",
          "LBR",
          "LSO",
          "THA",
          "ATF",
          "TGO",
          "TCD",
          "TCA",
          "LBY",
          "VAT",
          "VCT",
          "ARE",
          "AND",
          "ATG",
          "AFG",
          "AIA",
          "VIR",
          "ISL",
          "IRN",
          "ARM",
          "ALB",
          "AGO",
          "ATA",
          "ASM",
          "ARG",
          "AUS",
          "AUT",
          "ABW",
          "IND",
          "ALA",
          "AZE",
          "IRL",
          "IDN",
          "UKR",
          "QAT",
          "MOZ"
        ]
      },
      "CreateTenantDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "document": {
            "type": "string"
          },
          "countryCode": {
            "example": "BRA",
            "$ref": "#/components/schemas/CountryCodeEnum"
          },
          "hostname": {
            "type": "string",
            "example": "example.com"
          }
        },
        "required": [
          "name",
          "document",
          "countryCode",
          "hostname"
        ]
      },
      "TenantInfoDto": {
        "type": "object",
        "properties": {
          "emailLogoUrl": {
            "type": "string"
          },
          "headerLogoUrl": {
            "type": "string"
          },
          "headerBackgroundColor": {
            "type": "string"
          },
          "bodyCardBackgroundColor": {
            "type": "string"
          }
        },
        "required": [
          "headerBackgroundColor",
          "bodyCardBackgroundColor"
        ]
      },
      "TenantEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "document": {
            "type": "string"
          },
          "countryCode": {
            "default": "BRA",
            "example": "BRA",
            "$ref": "#/components/schemas/CountryCodeEnum"
          },
          "roles": {
            "default": "application",
            "example": [
              "application"
            ],
            "$ref": "#/components/schemas/TenantRoleEnum"
          },
          "wallets": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "client": {
            "type": "object"
          },
          "clientId": {
            "type": "object"
          },
          "info": {
            "$ref": "#/components/schemas/TenantInfoDto"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "document",
          "countryCode",
          "roles",
          "wallets",
          "info"
        ]
      },
      "TenantPaginateResponseDto": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TenantEntityDto"
            }
          }
        },
        "required": [
          "meta",
          "items"
        ]
      },
      "TenantClientResponseDto": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "example": "193d34cd9f6ca1f2661357e346822a3643bd5c3d0590a670ee896af6ca9a8141"
          },
          "clientId": {
            "type": "string",
            "format": "uuid"
          },
          "signatureKey": {
            "type": "string",
            "example": "ef9b4f3cc540501fa1d7c4f0fc1216851500ed52aa85f2adb34d978f70688f37"
          }
        },
        "required": [
          "apiKey",
          "clientId",
          "signatureKey"
        ]
      },
      "UpdateTenantProfileDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "UpdateTenantDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "document": {
            "type": "string"
          },
          "countryCode": {
            "example": "BRA",
            "$ref": "#/components/schemas/CountryCodeEnum"
          }
        }
      },
      "FindByHostnameDto": {
        "type": "object",
        "properties": {
          "hostname": {
            "type": "string",
            "example": "example.com"
          }
        },
        "required": [
          "hostname"
        ]
      },
      "CreateTenantAccessDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "TenantEntity": {
        "type": "object",
        "properties": {}
      },
      "TenantAccessEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "key": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          },
          "tenant": {
            "$ref": "#/components/schemas/TenantEntity"
          },
          "tenantId": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "key",
          "secret",
          "tenant",
          "tenantId",
          "active"
        ]
      },
      "TenantAccessPaginateResponseDto": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TenantAccessEntityDto"
            }
          }
        },
        "required": [
          "meta",
          "items"
        ]
      },
      "TenantHostPathsDto": {
        "type": "object",
        "properties": {
          "fillProfileForm": {
            "type": "string",
            "example": "/auth/complete-profile/",
            "description": "The path to the user complete profile page. Only fill in if different from default"
          },
          "userSignIn": {
            "type": "string",
            "example": "/auth/signIn/",
            "description": "The path to user sign in page. Only fill in if different from default"
          },
          "nftCertificate": {
            "type": "string",
            "example": "/token/{{contractAddress}}/{{chainId}}/{{tokenId}}",
            "description": "The path to see certificate of NFT. Only fill in if different from default"
          }
        }
      },
      "CreateTenantHostDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "isMain": {
            "type": "boolean"
          },
          "hostname": {
            "type": "string",
            "example": "example.com"
          },
          "paths": {
            "$ref": "#/components/schemas/TenantHostPathsDto"
          }
        },
        "required": [
          "hostname"
        ]
      },
      "TenantHostPathsResponse": {
        "type": "object",
        "properties": {
          "fillProfileForm": {
            "type": "string",
            "example": "/auth/complete-profile/",
            "description": "The path for the user to finish filling out their profile form. Only exists when it is different from default"
          },
          "userSignIn": {
            "type": "string",
            "example": "/auth/signIn/",
            "description": "The path to user sign in page. Only exists when it is different from default"
          },
          "nftCertificate": {
            "type": "string",
            "example": "/token/{{contractAddress}}/{{chainId}}/{{tokenId}}",
            "description": "The path to  see certificate of NF. Only exists when it is different from default"
          }
        }
      },
      "TenantHostResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "hostname": {
            "type": "string",
            "example": "example.com"
          },
          "tenantId": {
            "type": "string"
          },
          "isMain": {
            "type": "boolean"
          },
          "paths": {
            "$ref": "#/components/schemas/TenantHostPathsResponse"
          },
          "routes": {
            "$ref": "#/components/schemas/TenantHostPathsResponse"
          }
        },
        "required": [
          "id",
          "hostname",
          "tenantId",
          "isMain",
          "paths",
          "routes"
        ]
      },
      "TenantHostEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "hostname": {
            "type": "string",
            "example": "example.com"
          },
          "tenant": {
            "$ref": "#/components/schemas/TenantEntity"
          },
          "tenantId": {
            "type": "string"
          },
          "isMain": {
            "type": "boolean"
          },
          "paths": {
            "$ref": "#/components/schemas/TenantHostPathsResponse"
          },
          "routes": {
            "$ref": "#/components/schemas/TenantHostPathsResponse"
          }
        },
        "required": [
          "id",
          "hostname",
          "tenant",
          "tenantId",
          "isMain",
          "paths",
          "routes"
        ]
      },
      "TenantHostPaginateResponseDto": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TenantHostEntityDto"
            }
          }
        },
        "required": [
          "meta",
          "items"
        ]
      },
      "UpdateTenantHostDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "isMain": {
            "type": "boolean"
          },
          "hostname": {
            "type": "string",
            "example": "example.com"
          },
          "paths": {
            "$ref": "#/components/schemas/TenantHostPathsDto"
          }
        },
        "required": [
          "hostname"
        ]
      },
      "DataTypesEnum": {
        "type": "string",
        "enum": [
          "file",
          "url",
          "cpf",
          "phone",
          "text",
          "email"
        ]
      },
      "CreateTenantInputDto": {
        "type": "object",
        "properties": {
          "contextId": {
            "type": "string"
          },
          "label": {
            "type": "string",
            "example": "Input label"
          },
          "description": {
            "type": "string",
            "example": "Input description"
          },
          "type": {
            "example": "cpf",
            "$ref": "#/components/schemas/DataTypesEnum"
          },
          "order": {
            "type": "number",
            "example": 1
          },
          "mandatory": {
            "type": "boolean",
            "example": true
          },
          "active": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "contextId",
          "label",
          "description",
          "type",
          "order",
          "mandatory",
          "active"
        ]
      },
      "TenantInputEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "contextId": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "example": "cpf",
            "$ref": "#/components/schemas/DataTypesEnum"
          },
          "order": {
            "type": "number"
          },
          "mandatory": {
            "type": "boolean"
          },
          "active": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "tenantId",
          "contextId",
          "label",
          "description",
          "type",
          "order",
          "mandatory",
          "active"
        ]
      },
      "UpdateTenantInputDto": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "example": "Input label"
          },
          "description": {
            "type": "string",
            "example": "Input description"
          },
          "order": {
            "type": "number",
            "example": 1
          },
          "mandatory": {
            "type": "boolean",
            "example": true
          },
          "active": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "label",
          "description",
          "order",
          "mandatory",
          "active"
        ]
      },
      "TenantInputPaginateResponseDto": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TenantContextDto"
            }
          }
        },
        "required": [
          "meta",
          "items"
        ]
      },
      "TenantInputEntity": {
        "type": "object",
        "properties": {}
      },
      "AssetType": {
        "type": "string",
        "enum": [
          "image",
          "document"
        ]
      },
      "AssetStatus": {
        "type": "string",
        "enum": [
          "waitingUpload",
          "waitingAssociation",
          "associated",
          "excluded",
          "expired"
        ]
      },
      "AssetProvider": {
        "type": "string",
        "enum": [
          "cloudinary"
        ]
      },
      "AssetTarget": {
        "type": "string",
        "enum": [
          "userDocument"
        ]
      },
      "AssetEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "example": "image",
            "$ref": "#/components/schemas/AssetType"
          },
          "status": {
            "example": "associated",
            "$ref": "#/components/schemas/AssetStatus"
          },
          "provider": {
            "example": "cloudinary",
            "$ref": "#/components/schemas/AssetProvider"
          },
          "directLink": {
            "type": "string",
            "example": "https://dummyimage.com/200x200/fff/000",
            "nullable": true
          },
          "target": {
            "example": "userDocument",
            "nullable": true,
            "$ref": "#/components/schemas/AssetTarget"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "tenantId",
          "type",
          "status",
          "provider"
        ]
      },
      "UserDocumentStatus": {
        "type": "string",
        "enum": [
          "approved",
          "denied",
          "requiredReview",
          "created"
        ]
      },
      "DocumentEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "contextId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "inputId": {
            "type": "string",
            "format": "uuid"
          },
          "input": {
            "$ref": "#/components/schemas/TenantInputEntity"
          },
          "active": {
            "type": "boolean",
            "example": true
          },
          "value": {
            "type": "string"
          },
          "assetId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "asset": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/AssetEntityDto"
              }
            ]
          },
          "status": {
            "$ref": "#/components/schemas/UserDocumentStatus"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "tenantId",
          "contextId",
          "userId",
          "inputId",
          "active",
          "value",
          "assetId",
          "status"
        ]
      },
      "DocumentPaginateResponseDto": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentEntityDto"
            }
          }
        },
        "required": [
          "meta",
          "items"
        ]
      },
      "DocumentDto": {
        "type": "object",
        "properties": {
          "inputId": {
            "type": "string",
            "format": "uuid"
          },
          "value": {
            "type": "string"
          },
          "assetId": {
            "type": "string"
          }
        },
        "required": [
          "inputId"
        ]
      },
      "AttachDocumentsToUser": {
        "type": "object",
        "properties": {
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentDto"
            }
          }
        },
        "required": [
          "documents"
        ]
      },
      "UserContextStatus": {
        "type": "string",
        "enum": [
          "approved",
          "denied",
          "requiredReview",
          "created"
        ]
      },
      "LogUserContextDto": {
        "type": "object",
        "properties": {
          "inputIds": {
            "default": [],
            "type": "array",
            "items": {
              "type": "array"
            }
          },
          "moderatorId": {
            "type": "string",
            "format": "uuid"
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "registerAt": {
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/UserContextStatus"
          }
        },
        "required": [
          "inputIds",
          "moderatorId",
          "registerAt",
          "status"
        ]
      },
      "ContextDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "tenantId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "description",
          "slug"
        ]
      },
      "UserContextEntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "contextId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "status": {
            "example": "created",
            "$ref": "#/components/schemas/UserContextStatus"
          },
          "context": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/ContextDto"
              }
            ]
          },
          "logs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogUserContextDto"
            }
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "tenantId",
          "contextId",
          "userId",
          "status",
          "logs"
        ]
      },
      "UsersContextsPaginateResponseDto": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserContextEntityDto"
            }
          }
        },
        "required": [
          "meta",
          "items"
        ]
      },
      "UserContextStatusDto": {
        "type": "object",
        "properties": {
          "reason": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "RequiredReviewContextStatusDto": {
        "type": "object",
        "properties": {
          "reason": {
            "type": "string",
            "nullable": true
          },
          "inputIds": {
            "example": [],
            "type": "array",
            "items": {
              "type": "array"
            }
          }
        },
        "required": [
          "inputIds"
        ]
      },
      "AssetTypeEnum": {
        "type": "string",
        "enum": [
          "image",
          "document"
        ]
      },
      "AssetTargetEnum": {
        "type": "string",
        "enum": [
          "userDocument"
        ]
      },
      "RequestAssetUploadDto": {
        "type": "object",
        "properties": {
          "type": {
            "default": "image",
            "example": "image",
            "$ref": "#/components/schemas/AssetTypeEnum"
          },
          "target": {
            "example": "userDocument",
            "$ref": "#/components/schemas/AssetTargetEnum"
          }
        },
        "required": [
          "type",
          "target"
        ]
      },
      "CloudinaryProviderUploadParamsDto": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "example": "000000000000"
          },
          "timestamp": {
            "type": "number",
            "example": 1666215568
          },
          "publicId": {
            "type": "string",
            "example": "directory/3fa85f64-5717-4562-b3fc-2c963f66afa6"
          },
          "signature": {
            "type": "string",
            "example": "bfd09f95f331f558cbd1320e67aa8d488770583e"
          },
          "signedParams": {
            "type": "string",
            "example": "filename_override=false&public_id=directory/3fa85f64-5717-4562-b3fc-2c963f66afa6&timestamp=1666215568&unique_filename=true&upload_preset=upload_preset&api_key=000000000000&signature=bfd09f95f331f558cbd1320e67aa8d488770583e"
          },
          "queryParams": {
            "type": "object",
            "example": {
              "filename_override": "false",
              "public_id": "directory/3fa85f64-5717-4562-b3fc-2c963f66afa6",
              "timestamp": "1666215568",
              "unique_filename": "true"
            }
          },
          "uploadPreset": {
            "type": "string",
            "example": "upload_preset"
          }
        },
        "required": [
          "apiKey",
          "timestamp",
          "publicId",
          "signature",
          "signedParams",
          "queryParams",
          "uploadPreset"
        ]
      },
      "AssetEntityWithProviderUploadParamsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "example": "image",
            "$ref": "#/components/schemas/AssetType"
          },
          "status": {
            "example": "associated",
            "$ref": "#/components/schemas/AssetStatus"
          },
          "provider": {
            "example": "cloudinary",
            "$ref": "#/components/schemas/AssetProvider"
          },
          "directLink": {
            "type": "string",
            "example": "https://dummyimage.com/200x200/fff/000",
            "nullable": true
          },
          "target": {
            "example": "userDocument",
            "nullable": true,
            "$ref": "#/components/schemas/AssetTarget"
          },
          "providerUploadParams": {
            "$ref": "#/components/schemas/CloudinaryProviderUploadParamsDto"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "tenantId",
          "type",
          "status",
          "provider",
          "providerUploadParams"
        ]
      },
      "CreateContextsDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          }
        },
        "required": [
          "description",
          "slug"
        ]
      },
      "UpdateContextsDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          }
        },
        "required": [
          "description",
          "slug"
        ]
      },
      "DuplicatedContextException": {
        "type": "object",
        "properties": {}
      },
      "CreateTenantContextDto": {
        "type": "object",
        "properties": {
          "contextId": {
            "type": "string"
          },
          "active": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "contextId",
          "active"
        ]
      },
      "TenantContextDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "contextId": {
            "type": "string"
          },
          "context": {
            "$ref": "#/components/schemas/ContextDto"
          },
          "active": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "tenantId",
          "contextId",
          "active"
        ]
      },
      "UpdateTenantContextDto": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "active"
        ]
      },
      "PublicDataDto": {
        "type": "object",
        "properties": {
          "WALLET_CONNECT": {
            "type": "object"
          },
          "METAMASK": {
            "type": "object"
          }
        }
      },
      "PrivateDataDto": {
        "type": "object",
        "properties": {
          "WALLET_CONNECT": {
            "type": "object"
          },
          "METAMASK": {
            "type": "object"
          }
        }
      },
      "IntegrationType": {
        "type": "string",
        "enum": [
          "WALLET_CONNECT",
          "METAMASK"
        ]
      },
      "IntegrationResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/IntegrationType"
          },
          "publicData": {
            "$ref": "#/components/schemas/PublicDataDto"
          },
          "userId": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "tenantId",
          "type",
          "publicData",
          "userId",
          "active"
        ]
      },
      "CheckWhitelistUserResponseDto": {
        "type": "object",
        "properties": {
          "whitelistId": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "hasAccess": {
            "type": "boolean",
            "example": false
          }
        },
        "required": [
          "whitelistId",
          "userId",
          "hasAccess"
        ]
      },
      "CheckUserInMultipleWhitelistsResponseDto": {
        "type": "object",
        "properties": {
          "hasAccess": {
            "type": "boolean",
            "example": false
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CheckWhitelistUserResponseDto"
            }
          }
        },
        "required": [
          "hasAccess",
          "details"
        ]
      },
      "WalletGroupStatus": {
        "type": "string",
        "enum": [
          "draft",
          "publishing",
          "published"
        ]
      },
      "WalletGroupResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "contractAddress": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "actionId": {
            "type": "string",
            "format": "uuid"
          },
          "chainId": {
            "default": 137,
            "example": 137,
            "$ref": "#/components/schemas/ChainId"
          },
          "status": {
            "$ref": "#/components/schemas/WalletGroupStatus"
          },
          "whitelistId": {
            "type": "string"
          },
          "lastSyncBlock": {
            "type": "number"
          },
          "sync": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "tenantId",
          "contractAddress",
          "chainId",
          "status",
          "sync"
        ]
      },
      "WhitelistResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "example": "W3Block Whitelist"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "walletGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WalletGroupResponseDto"
            }
          }
        },
        "required": [
          "id",
          "tenantId",
          "name"
        ]
      },
      "WhitelistPaginateResponseDto": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WhitelistResponseDto"
            }
          }
        },
        "required": [
          "meta",
          "items"
        ]
      },
      "CreateOrUpdateWhitelistDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "W3Block Whitelist"
          }
        },
        "required": [
          "name"
        ]
      },
      "WhitelistOnChainDto": {
        "type": "object",
        "properties": {
          "chainId": {
            "default": 137,
            "example": 137,
            "$ref": "#/components/schemas/ChainId"
          }
        },
        "required": [
          "chainId"
        ]
      },
      "WhitelistEntriesSortBy": {
        "type": "string",
        "enum": [
          "createdAt",
          "updatedAt"
        ]
      },
      "WhitelistEntryType": {
        "type": "string",
        "enum": [
          "user_id",
          "email",
          "wallet_address",
          "collection_holder"
        ]
      },
      "WhitelistEntryResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "whitelistId": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "type": {
            "example": "collection_holder",
            "$ref": "#/components/schemas/WhitelistEntryType"
          },
          "value": {
            "type": "string",
            "example": "0xd3304183ec1fa687e380b67419875f97f1db05f5"
          },
          "additionalData": {
            "type": "object"
          },
          "wallets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WalletResponseDto"
            }
          }
        },
        "required": [
          "id",
          "whitelistId",
          "type",
          "value"
        ]
      },
      "WhitelistEntryPaginateResponseDto": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WhitelistEntryResponseDto"
            }
          }
        },
        "required": [
          "meta",
          "items"
        ]
      },
      "CreateWhitelistEntryDto": {
        "type": "object",
        "properties": {
          "type": {
            "example": "collection_holder",
            "default": "collection_holder",
            "$ref": "#/components/schemas/WhitelistEntryType"
          },
          "value": {
            "type": "string",
            "example": "0xd3304183ec1fa687e380b67419875f97f1db05f5"
          },
          "additionalData": {
            "type": "object",
            "example": {
              "chainId": 80001
            }
          }
        },
        "required": [
          "type",
          "value"
        ]
      }
    }
  }
}